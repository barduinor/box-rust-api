/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PostTermsOfServiceUserStatusesRequest {
    #[serde(rename = "tos")]
    pub tos: Box<crate::models::PostTermsOfServiceUserStatusesRequestTos>,
    #[serde(rename = "user")]
    pub user: Box<crate::models::PostTermsOfServiceUserStatusesRequestUser>,
    /// Whether the user has accepted the terms.
    #[serde(rename = "is_accepted")]
    pub is_accepted: bool,
}

impl PostTermsOfServiceUserStatusesRequest {
    pub fn new(tos: crate::models::PostTermsOfServiceUserStatusesRequestTos, user: crate::models::PostTermsOfServiceUserStatusesRequestUser, is_accepted: bool) -> PostTermsOfServiceUserStatusesRequest {
        PostTermsOfServiceUserStatusesRequest {
            tos: Box::new(tos),
            user: Box::new(user),
            is_accepted,
        }
    }
}


