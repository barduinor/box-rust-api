/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FileFullAllOfLock {
    /// The unique identifier for this lock
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// `lock`
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<RHashType>,
    #[serde(rename = "created_by", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<Box<crate::models::LockCreatedBy>>,
    /// The time this lock was created at.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// The time this lock is to expire at, which might be in the past.
    #[serde(rename = "expired_at", skip_serializing_if = "Option::is_none")]
    pub expired_at: Option<String>,
    /// Whether or not the file can be downloaded while locked.
    #[serde(rename = "is_download_prevented", skip_serializing_if = "Option::is_none")]
    pub is_download_prevented: Option<bool>,
    /// If the lock is managed by an application rather than a user, this field identifies the type of the application that holds the lock. This is an open enum and may be extended with additional values in the future.
    #[serde(rename = "app_type", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub app_type: Option<Option<AppType>>,
}

impl FileFullAllOfLock {
    pub fn new() -> FileFullAllOfLock {
        FileFullAllOfLock {
            id: None,
            r#type: None,
            created_by: None,
            created_at: None,
            expired_at: None,
            is_download_prevented: None,
            app_type: None,
        }
    }
}

/// `lock`
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "lock")]
    Lock,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::Lock
    }
}
/// If the lock is managed by an application rather than a user, this field identifies the type of the application that holds the lock. This is an open enum and may be extended with additional values in the future.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AppType {
    #[serde(rename = "gsuite")]
    Gsuite,
    #[serde(rename = "office_wopi")]
    OfficeWopi,
    #[serde(rename = "office_wopiplus")]
    OfficeWopiplus,
    #[serde(rename = "other")]
    Other,
}

impl Default for AppType {
    fn default() -> AppType {
        Self::Gsuite
    }
}

