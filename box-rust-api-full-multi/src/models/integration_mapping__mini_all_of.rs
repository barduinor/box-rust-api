/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct IntegrationMappingMiniAllOf {
    /// ID of the mapped partner item
    #[serde(rename = "partner_item_id", skip_serializing_if = "Option::is_none")]
    pub partner_item_id: Option<String>,
    /// Domain-specific type of the mapped partner item
    #[serde(rename = "partner_item_type", skip_serializing_if = "Option::is_none")]
    pub partner_item_type: Option<PartnerItemType>,
    /// ID of the Box item mapped to the object referenced in `partner_item_id`
    #[serde(rename = "box_item_id", skip_serializing_if = "Option::is_none")]
    pub box_item_id: Option<String>,
    /// Type of the Box object referenced in `box_item_id`
    #[serde(rename = "box_item_type", skip_serializing_if = "Option::is_none")]
    pub box_item_type: Option<BoxItemType>,
}

impl IntegrationMappingMiniAllOf {
    pub fn new() -> IntegrationMappingMiniAllOf {
        IntegrationMappingMiniAllOf {
            partner_item_id: None,
            partner_item_type: None,
            box_item_id: None,
            box_item_type: None,
        }
    }
}

/// Domain-specific type of the mapped partner item
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PartnerItemType {
    #[serde(rename = "channel")]
    Channel,
}

impl Default for PartnerItemType {
    fn default() -> PartnerItemType {
        Self::Channel
    }
}
/// Type of the Box object referenced in `box_item_id`
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BoxItemType {
    #[serde(rename = "folder")]
    Folder,
}

impl Default for BoxItemType {
    fn default() -> BoxItemType {
        Self::Folder
    }
}

