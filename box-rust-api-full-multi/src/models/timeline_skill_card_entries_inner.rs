/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */

/// TimelineSkillCardEntriesInner : An single item that's placed on multiple items on the timeline.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TimelineSkillCardEntriesInner {
    /// The text of the entry. This would be the display name for an item being placed on the timeline, for example the name of the person who was detected in a video.
    #[serde(rename = "text", skip_serializing_if = "Option::is_none")]
    pub text: Option<String>,
    /// Defines a list of timestamps for when this item should appear on the timeline.
    #[serde(rename = "appears", skip_serializing_if = "Option::is_none")]
    pub appears: Option<Vec<crate::models::TimelineSkillCardEntriesInnerAppearsInner>>,
    /// The image to show on a for an entry that appears on a timeline. This image URL is required for every entry.  The image will be shown in a list of items (for example faces), and clicking the image will show the user where that entry appears during the duration of this entry.
    #[serde(rename = "image_url", skip_serializing_if = "Option::is_none")]
    pub image_url: Option<String>,
}

impl TimelineSkillCardEntriesInner {
    /// An single item that's placed on multiple items on the timeline.
    pub fn new() -> TimelineSkillCardEntriesInner {
        TimelineSkillCardEntriesInner {
            text: None,
            appears: None,
            image_url: None,
        }
    }
}


