/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */

/// SkillInvocation : The payload of a Box skill as sent to a skill's `invocation_url`.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SkillInvocation {
    /// `skill_invocation`
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<RHashType>,
    /// Unique identifier for the invocation request.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "skill", skip_serializing_if = "Option::is_none")]
    pub skill: Option<Box<crate::models::SkillInvocationSkill>>,
    #[serde(rename = "token", skip_serializing_if = "Option::is_none")]
    pub token: Option<Box<crate::models::SkillInvocationToken>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Box<crate::models::SkillInvocationStatus>>,
    /// The time this invocation was created.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// Action that triggered the invocation
    #[serde(rename = "trigger", skip_serializing_if = "Option::is_none")]
    pub trigger: Option<String>,
    #[serde(rename = "enterprise", skip_serializing_if = "Option::is_none")]
    pub enterprise: Option<Box<crate::models::SkillInvocationEnterprise>>,
    #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
    pub source: Option<Box<crate::models::SkillInvocationSource>>,
    #[serde(rename = "event", skip_serializing_if = "Option::is_none")]
    pub event: Option<Box<crate::models::SkillInvocationEvent>>,
}

impl SkillInvocation {
    /// The payload of a Box skill as sent to a skill's `invocation_url`.
    pub fn new() -> SkillInvocation {
        SkillInvocation {
            r#type: None,
            id: None,
            skill: None,
            token: None,
            status: None,
            created_at: None,
            trigger: None,
            enterprise: None,
            source: None,
            event: None,
        }
    }
}

/// `skill_invocation`
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "skill_invocation")]
    SkillInvocation,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::SkillInvocation
    }
}

