/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */

/// TranscriptSkillCardInvocation : The invocation of this service, used to track which instance of a service applied the metadata.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TranscriptSkillCardInvocation {
    /// `skill_invocation`
    #[serde(rename = "type")]
    pub r#type: RHashType,
    /// A custom identifier that represent the instance of the service that applied this metadata. For example, if your `image-recognition-service` runs on multiple nodes, this field can be used to identify the ID of the node that was used to apply the metadata.
    #[serde(rename = "id")]
    pub id: String,
}

impl TranscriptSkillCardInvocation {
    /// The invocation of this service, used to track which instance of a service applied the metadata.
    pub fn new(r#type: RHashType, id: String) -> TranscriptSkillCardInvocation {
        TranscriptSkillCardInvocation {
            r#type,
            id,
        }
    }
}

/// `skill_invocation`
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "skill_invocation")]
    SkillInvocation,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::SkillInvocation
    }
}

