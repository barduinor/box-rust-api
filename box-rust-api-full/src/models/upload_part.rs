/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */

/// UploadPart : The representation of an upload session chunk.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UploadPart {
    /// The unique ID of the chunk.
    #[serde(rename = "part_id", skip_serializing_if = "Option::is_none")]
    pub part_id: Option<String>,
    /// The offset of the chunk within the file in bytes. The lower bound of the position of the chunk within the file.
    #[serde(rename = "offset", skip_serializing_if = "Option::is_none")]
    pub offset: Option<i64>,
    /// The size of the chunk in bytes.
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i64>,
    /// The SHA1 hash of the chunk.
    #[serde(rename = "sha1", skip_serializing_if = "Option::is_none")]
    pub sha1: Option<String>,
}

impl UploadPart {
    /// The representation of an upload session chunk.
    pub fn new() -> UploadPart {
        UploadPart {
            part_id: None,
            offset: None,
            size: None,
            sha1: None,
        }
    }
}


