/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */

/// ExpiringEmbedLinkAllOf : The basics of an access token



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ExpiringEmbedLinkAllOf {
    /// The requested access token.
    #[serde(rename = "access_token", skip_serializing_if = "Option::is_none")]
    pub access_token: Option<String>,
    /// The time in seconds in seconds by which this token will expire.
    #[serde(rename = "expires_in", skip_serializing_if = "Option::is_none")]
    pub expires_in: Option<i64>,
    /// The type of access token returned.
    #[serde(rename = "token_type", skip_serializing_if = "Option::is_none")]
    pub token_type: Option<TokenType>,
    /// The permissions that this access token permits, providing a list of resources (files, folders, etc) and the scopes permitted for each of those resources.
    #[serde(rename = "restricted_to", skip_serializing_if = "Option::is_none")]
    pub restricted_to: Option<Vec<crate::models::FileScope>>,
}

impl ExpiringEmbedLinkAllOf {
    /// The basics of an access token
    pub fn new() -> ExpiringEmbedLinkAllOf {
        ExpiringEmbedLinkAllOf {
            access_token: None,
            expires_in: None,
            token_type: None,
            restricted_to: None,
        }
    }
}

/// The type of access token returned.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TokenType {
    #[serde(rename = "bearer")]
    Bearer,
}

impl Default for TokenType {
    fn default() -> TokenType {
        Self::Bearer
    }
}

