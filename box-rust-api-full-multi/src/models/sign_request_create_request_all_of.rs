/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SignRequestCreateRequestAllOf {
    /// List of files to create a signing document from. This is currently limited to ten files. Only the ID and type fields are required for each file.
    #[serde(rename = "source_files", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub source_files: Option<Option<Vec<crate::models::FileBase>>>,
    /// Array of signers for the sign request. 35 is the max number of signers permitted.
    #[serde(rename = "signers", skip_serializing_if = "Option::is_none")]
    pub signers: Option<Vec<crate::models::SignRequestCreateSigner>>,
}

impl SignRequestCreateRequestAllOf {
    pub fn new() -> SignRequestCreateRequestAllOf {
        SignRequestCreateRequestAllOf {
            source_files: None,
            signers: None,
        }
    }
}


