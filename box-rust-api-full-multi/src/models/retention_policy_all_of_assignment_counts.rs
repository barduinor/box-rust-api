/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */

/// RetentionPolicyAllOfAssignmentCounts : Counts the retention policy assignments for each item type.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RetentionPolicyAllOfAssignmentCounts {
    /// The number of enterprise assignments this policy has. The maximum value is 1.
    #[serde(rename = "enterprise", skip_serializing_if = "Option::is_none")]
    pub enterprise: Option<i64>,
    /// The number of folder assignments this policy has.
    #[serde(rename = "folder", skip_serializing_if = "Option::is_none")]
    pub folder: Option<i64>,
    /// The number of metadata template assignments this policy has.
    #[serde(rename = "metadata_template", skip_serializing_if = "Option::is_none")]
    pub metadata_template: Option<i64>,
}

impl RetentionPolicyAllOfAssignmentCounts {
    /// Counts the retention policy assignments for each item type.
    pub fn new() -> RetentionPolicyAllOfAssignmentCounts {
        RetentionPolicyAllOfAssignmentCounts {
            enterprise: None,
            folder: None,
            metadata_template: None,
        }
    }
}


