/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MetadataFullAllOf {
    /// Whether the user can edit this metadata instance.
    #[serde(rename = "$canEdit", skip_serializing_if = "Option::is_none")]
    pub dollar_can_edit: Option<bool>,
    /// A UUID to identify the metadata instance.
    #[serde(rename = "$id", skip_serializing_if = "Option::is_none")]
    pub dollar_id: Option<uuid::Uuid>,
    /// A unique identifier for the \"type\" of this instance. This is an internal system property and should not be used by a client application.
    #[serde(rename = "$type", skip_serializing_if = "Option::is_none")]
    pub dollar_type: Option<String>,
    /// The last-known version of the template of the object. This is an internal system property and should not be used by a client application.
    #[serde(rename = "$typeVersion", skip_serializing_if = "Option::is_none")]
    pub dollar_type_version: Option<i32>,
}

impl MetadataFullAllOf {
    pub fn new() -> MetadataFullAllOf {
        MetadataFullAllOf {
            dollar_can_edit: None,
            dollar_id: None,
            dollar_type: None,
            dollar_type_version: None,
        }
    }
}


