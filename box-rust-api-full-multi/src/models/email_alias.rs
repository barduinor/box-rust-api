/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */

/// EmailAlias : An email alias for a user.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct EmailAlias {
    /// The unique identifier for this object
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// `email_alias`
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<RHashType>,
    /// The email address
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// Whether the email address has been confirmed
    #[serde(rename = "is_confirmed", skip_serializing_if = "Option::is_none")]
    pub is_confirmed: Option<bool>,
}

impl EmailAlias {
    /// An email alias for a user.
    pub fn new() -> EmailAlias {
        EmailAlias {
            id: None,
            r#type: None,
            email: None,
            is_confirmed: None,
        }
    }
}

/// `email_alias`
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "email_alias")]
    EmailAlias,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::EmailAlias
    }
}

