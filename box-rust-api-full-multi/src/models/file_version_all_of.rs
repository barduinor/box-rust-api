/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FileVersionAllOf {
    /// The name of the file version
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Size of the file version in bytes
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i64>,
    /// When the file version object was created
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    /// When the file version object was last updated
    #[serde(rename = "modified_at", skip_serializing_if = "Option::is_none")]
    pub modified_at: Option<String>,
    #[serde(rename = "modified_by", skip_serializing_if = "Option::is_none")]
    pub modified_by: Option<Box<crate::models::FileVersionAllOfModifiedBy>>,
    /// When the file version object was trashed.
    #[serde(rename = "trashed_at", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub trashed_at: Option<Option<String>>,
    #[serde(rename = "trashed_by", skip_serializing_if = "Option::is_none")]
    pub trashed_by: Option<Box<crate::models::FileVersionAllOfTrashedBy>>,
    /// When the file version was restored from the trash.
    #[serde(rename = "restored_at", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub restored_at: Option<Option<String>>,
    #[serde(rename = "restored_by", skip_serializing_if = "Option::is_none")]
    pub restored_by: Option<Box<crate::models::FileVersionAllOfRestoredBy>>,
    /// When the file version object will be permanently deleted.
    #[serde(rename = "purged_at", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub purged_at: Option<Option<String>>,
    /// The display name of the user that uploaded the file. In most cases this is the name of the user logged in at the time of the upload.  If the file was uploaded using a File Request form that requires the user to provide an email address, this field is populated with that email address. If an email address was not required in the File Request form, this field is set to return a value of `File Request`.  In all other anonymous cases where no email was provided this field will default to a value of `Someone`.
    #[serde(rename = "uploader_display_name", skip_serializing_if = "Option::is_none")]
    pub uploader_display_name: Option<String>,
}

impl FileVersionAllOf {
    pub fn new() -> FileVersionAllOf {
        FileVersionAllOf {
            name: None,
            size: None,
            created_at: None,
            modified_at: None,
            modified_by: None,
            trashed_at: None,
            trashed_by: None,
            restored_at: None,
            restored_by: None,
            purged_at: None,
            uploader_display_name: None,
        }
    }
}


