/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */

/// LegalHoldPolicyAllOfAssignmentCounts : Counts of assignments within this a legal hold policy by item type



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct LegalHoldPolicyAllOfAssignmentCounts {
    /// The number of users this policy is applied to
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<i64>,
    /// The number of folders this policy is applied to
    #[serde(rename = "folder", skip_serializing_if = "Option::is_none")]
    pub folder: Option<i64>,
    /// The number of files this policy is applied to
    #[serde(rename = "file", skip_serializing_if = "Option::is_none")]
    pub file: Option<i64>,
    /// The number of file versions this policy is applied to
    #[serde(rename = "file_version", skip_serializing_if = "Option::is_none")]
    pub file_version: Option<i64>,
}

impl LegalHoldPolicyAllOfAssignmentCounts {
    /// Counts of assignments within this a legal hold policy by item type
    pub fn new() -> LegalHoldPolicyAllOfAssignmentCounts {
        LegalHoldPolicyAllOfAssignmentCounts {
            user: None,
            folder: None,
            file: None,
            file_version: None,
        }
    }
}


