/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */

/// SignTemplateAllOfCustomBranding : Custom branding applied to notifications and signature requests.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SignTemplateAllOfCustomBranding {
    /// Name of the company
    #[serde(rename = "company_name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub company_name: Option<Option<String>>,
    /// Custom branding logo URI in the form of a base64 image.
    #[serde(rename = "logo_uri", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub logo_uri: Option<Option<String>>,
    /// Custom branding color in hex.
    #[serde(rename = "branding_color", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub branding_color: Option<Option<String>>,
    /// Content of the email footer.
    #[serde(rename = "email_footer_text", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub email_footer_text: Option<Option<String>>,
}

impl SignTemplateAllOfCustomBranding {
    /// Custom branding applied to notifications and signature requests.
    pub fn new() -> SignTemplateAllOfCustomBranding {
        SignTemplateAllOfCustomBranding {
            company_name: None,
            logo_uri: None,
            branding_color: None,
            email_footer_text: None,
        }
    }
}


