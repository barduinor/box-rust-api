/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PostMetadataCascadePoliciesIdApplyRequest {
    /// Describes the desired behavior when dealing with the conflict where a metadata template already has an instance applied to a child.  * `none` will preserve the existing value on the file * `overwrite` will force-apply the templates values over   any existing values.
    #[serde(rename = "conflict_resolution")]
    pub conflict_resolution: ConflictResolution,
}

impl PostMetadataCascadePoliciesIdApplyRequest {
    pub fn new(conflict_resolution: ConflictResolution) -> PostMetadataCascadePoliciesIdApplyRequest {
        PostMetadataCascadePoliciesIdApplyRequest {
            conflict_resolution,
        }
    }
}

/// Describes the desired behavior when dealing with the conflict where a metadata template already has an instance applied to a child.  * `none` will preserve the existing value on the file * `overwrite` will force-apply the templates values over   any existing values.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ConflictResolution {
    #[serde(rename = "none")]
    None,
    #[serde(rename = "overwrite")]
    Overwrite,
}

impl Default for ConflictResolution {
    fn default() -> ConflictResolution {
        Self::None
    }
}

