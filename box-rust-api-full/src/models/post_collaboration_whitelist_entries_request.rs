/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PostCollaborationWhitelistEntriesRequest {
    /// The domain to add to the list of allowed domains.
    #[serde(rename = "domain")]
    pub domain: String,
    /// The direction in which to allow collaborations.
    #[serde(rename = "direction")]
    pub direction: Direction,
}

impl PostCollaborationWhitelistEntriesRequest {
    pub fn new(domain: String, direction: Direction) -> PostCollaborationWhitelistEntriesRequest {
        PostCollaborationWhitelistEntriesRequest {
            domain,
            direction,
        }
    }
}

/// The direction in which to allow collaborations.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Direction {
    #[serde(rename = "inbound")]
    Inbound,
    #[serde(rename = "outbound")]
    Outbound,
    #[serde(rename = "both")]
    Both,
}

impl Default for Direction {
    fn default() -> Direction {
        Self::Inbound
    }
}

