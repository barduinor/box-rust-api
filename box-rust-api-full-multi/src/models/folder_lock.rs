/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */

/// FolderLock : Folder locks define access restrictions placed by folder owners to prevent specific folders from being moved or deleted.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FolderLock {
    #[serde(rename = "folder", skip_serializing_if = "Option::is_none")]
    pub folder: Option<Box<crate::models::FolderLockFolder>>,
    /// The unique identifier for this folder lock.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The object type, always `folder_lock`.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "created_by", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<Box<crate::models::FolderLockCreatedBy>>,
    /// When the folder lock object was created.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "locked_operations", skip_serializing_if = "Option::is_none")]
    pub locked_operations: Option<Box<crate::models::FolderLockLockedOperations>>,
    /// The lock type, always `freeze`.
    #[serde(rename = "lock_type", skip_serializing_if = "Option::is_none")]
    pub lock_type: Option<String>,
}

impl FolderLock {
    /// Folder locks define access restrictions placed by folder owners to prevent specific folders from being moved or deleted.
    pub fn new() -> FolderLock {
        FolderLock {
            folder: None,
            id: None,
            r#type: None,
            created_by: None,
            created_at: None,
            locked_operations: None,
            lock_type: None,
        }
    }
}


