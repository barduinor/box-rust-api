/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct PostWebLinksRequest {
    /// The URL that this web link links to. Must start with `\"http://\"` or `\"https://\"`.
    #[serde(rename = "url")]
    pub url: String,
    #[serde(rename = "parent")]
    pub parent: Box<crate::models::PostWebLinksRequestParent>,
    /// Name of the web link. Defaults to the URL if not set.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Description of the web link.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "shared_link", skip_serializing_if = "Option::is_none")]
    pub shared_link: Option<Box<crate::models::PostWebLinksRequestSharedLink>>,
}

impl PostWebLinksRequest {
    pub fn new(url: String, parent: crate::models::PostWebLinksRequestParent) -> PostWebLinksRequest {
        PostWebLinksRequest {
            url,
            parent: Box::new(parent),
            name: None,
            description: None,
            shared_link: None,
        }
    }
}


