/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */

/// ShieldInformationBarrier : A standard representation of a shield information barrier object



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ShieldInformationBarrier {
    /// The unique identifier for the shield information barrier
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// The type of the shield information barrier
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<RHashType>,
    #[serde(rename = "enterprise", skip_serializing_if = "Option::is_none")]
    pub enterprise: Option<Box<crate::models::ShieldInformationBarrierEnterprise>>,
    /// Status of the shield information barrier
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    /// ISO date time string when this shield information barrier object was created.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<String>,
    #[serde(rename = "created_by", skip_serializing_if = "Option::is_none")]
    pub created_by: Option<Box<crate::models::ShieldInformationBarrierCreatedBy>>,
    /// ISO date time string when this shield information barrier was updated.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<String>,
    #[serde(rename = "updated_by", skip_serializing_if = "Option::is_none")]
    pub updated_by: Option<Box<crate::models::ShieldInformationBarrierUpdatedBy>>,
    /// ISO date time string when this shield information barrier was enabled.
    #[serde(rename = "enabled_at", skip_serializing_if = "Option::is_none")]
    pub enabled_at: Option<String>,
    #[serde(rename = "enabled_by", skip_serializing_if = "Option::is_none")]
    pub enabled_by: Option<Box<crate::models::ShieldInformationBarrierEnabledBy>>,
}

impl ShieldInformationBarrier {
    /// A standard representation of a shield information barrier object
    pub fn new() -> ShieldInformationBarrier {
        ShieldInformationBarrier {
            id: None,
            r#type: None,
            enterprise: None,
            status: None,
            created_at: None,
            created_by: None,
            updated_at: None,
            updated_by: None,
            enabled_at: None,
            enabled_by: None,
        }
    }
}

/// The type of the shield information barrier
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "shield_information_barrier")]
    ShieldInformationBarrier,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::ShieldInformationBarrier
    }
}
/// Status of the shield information barrier
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "draft")]
    Draft,
    #[serde(rename = "pending")]
    Pending,
    #[serde(rename = "disabled")]
    Disabled,
    #[serde(rename = "enabled")]
    Enabled,
    #[serde(rename = "invalid")]
    Invalid,
}

impl Default for Status {
    fn default() -> Status {
        Self::Draft
    }
}

