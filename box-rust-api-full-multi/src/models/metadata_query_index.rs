/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */

/// MetadataQueryIndex : A metadata query index



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MetadataQueryIndex {
    /// The ID of the metadata query index.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Value is always `metadata_query_index`
    #[serde(rename = "type")]
    pub r#type: String,
    /// The status of the metadata query index
    #[serde(rename = "status")]
    pub status: Status,
    /// A list of template fields which make up the index.
    #[serde(rename = "fields", skip_serializing_if = "Option::is_none")]
    pub fields: Option<Vec<crate::models::MetadataQueryIndexFieldsInner>>,
}

impl MetadataQueryIndex {
    /// A metadata query index
    pub fn new(r#type: String, status: Status) -> MetadataQueryIndex {
        MetadataQueryIndex {
            id: None,
            r#type,
            status,
            fields: None,
        }
    }
}

/// The status of the metadata query index
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "building")]
    Building,
    #[serde(rename = "active")]
    Active,
    #[serde(rename = "disabled")]
    Disabled,
}

impl Default for Status {
    fn default() -> Status {
        Self::Building
    }
}

