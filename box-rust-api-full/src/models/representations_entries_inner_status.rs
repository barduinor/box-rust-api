/*
 * Box Platform API
 *
 * [Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: devrel@box.com
 * Generated by: https://openapi-generator.tech
 */

/// RepresentationsEntriesInnerStatus : An object containing the status of this representation.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RepresentationsEntriesInnerStatus {
    /// The status of the representation.  * `success` defines the representation as ready to be viewed. * `viewable` defines a video to be ready for viewing. * `pending` defines the representation as to be generated. Retry   this endpoint to re-check the status. * `none` defines that the representation will be created when   requested. Request the URL defined in the `info` object to   trigger this generation.
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<State>,
}

impl RepresentationsEntriesInnerStatus {
    /// An object containing the status of this representation.
    pub fn new() -> RepresentationsEntriesInnerStatus {
        RepresentationsEntriesInnerStatus {
            state: None,
        }
    }
}

/// The status of the representation.  * `success` defines the representation as ready to be viewed. * `viewable` defines a video to be ready for viewing. * `pending` defines the representation as to be generated. Retry   this endpoint to re-check the status. * `none` defines that the representation will be created when   requested. Request the URL defined in the `info` object to   trigger this generation.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum State {
    #[serde(rename = "success")]
    Success,
    #[serde(rename = "viewable")]
    Viewable,
    #[serde(rename = "pending")]
    Pending,
    #[serde(rename = "none")]
    None,
}

impl Default for State {
    fn default() -> State {
        Self::Success
    }
}

